name: refresh

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    
env:
  DBT_PROFILES_DIR: ./

jobs:
  refresh:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      actions: read
      packages: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@master

      - name: Setup Rclone
        uses: AnimMouse/setup-rclone@v1
        with:
          rclone_config: ${{ secrets.RCLONE_CONFIG }}
        
      - name: Add Rclone service account file
        uses: AnimMouse/setup-rclone/service-account-file@v1
        with:
          service_account_filename: service-account-file.json
          service_account_file: ${{ secrets.SERVICE_ACCOUNT_FILE }} 

      - uses: actions/setup-python@master

      - run: rclone copy sm2drive:Vzduchotechnika/Model/ ./gdrive/

      - run: rclone copy sm2drive:Indoor/Model/ ./gdrive/

      - run: ls -l ./gdrive/

      - run: rclone copy sm2drive:Vzduchotechnika/Latest/Upload ./latest/

      - run: rclone copy sm2drive:Indoor/Latest/Upload ./latest/

      - name: Merge valid Ventilation data
        run: |
          Item=0
          Files=""
          if find ./latest -maxdepth 1 -type f -name 'Graph*' | grep -q .; then
            for file in ./latest/Graph*; do
              Item=$((Item + 1))
              Files+="./latest/tmp${Item}.csv "
              echo "Processing $file"
              nb_of_cols=$(csvcut -n "$file" -d ';' | grep "[A-Za-a]" | wc -l)
              csvcut -c 1-"$nb_of_cols" "$file" -d ';' >  ./latest/tmp"$Item".csv
              date=$(tail "$file" | grep "00:00" | tail -n 1 | grep -Eo '[0-9]{2}.[0-9]{2}.[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}' | sed -E 's/([0-9]{2}).([0-9]{2}).([0-9]{4})/\3-\2-\1/')
            done
            Files=${Files::-1}
            csvjoin --locale cs_CZ -c Date --outer ${Files} > ./gdrive/merged.csv
            echo "extdate=${date//[\ \:\-\;><\@\$\#\&\(\)\?\\\/\%]/_}" >> $GITHUB_ENV
          else
            echo "Date,KOT1/Teplota venkovní (°C)" >  ./gdrive/merged.csv
          fi

      - name: Make indoor_merge_all_sensors.sh executable
        run: chmod +x ./scripts/indoor_merge_all_sensors.sh

      - name: Merge valid Indoor data
        run: ./scripts/indoor_merge_all_sensors.sh
          
      - run: ls -l ./gdrive/

      - name: Install dependencies
        run: |
          pip install --upgrade dbt-duckdb
          pip install --upgrade duckdb
          pip install --upgrade csvkit
          dbt deps

      - name: Lint with sqlfluff
        run: |
          pip install --upgrade sqlfluff
          sqlfluff fix --dialect duckdb -v models/
          sqlfluff lint --dialect duckdb -v models/
    
          # Linting only modified models
          # git fetch origin main:main
          # git diff main --name-only --diff-filter=d | egrep '^models/.*sql$$' | xargs -r sqlfluff lint

      - name: Run dbt source freshness
        run: dbt source freshness

      - name: Run dbt seed
        run: dbt seed

      - name: Run dbt build
        id: run_dbt_build
        run: dbt build --select result:error+ source_status:fresher+ --defer --state docs
        continue-on-error: true

      - name: Full dbt build 
        if: steps.run_dbt_build.outcome != 'success'
        run: dbt build

      - name: Run docs generate
        run: dbt docs generate

      - name: Generate dbt docs
        run: |
          mkdir -p ${{ github.workspace }}/docs && cp ${{ github.workspace }}/target/*.json ${{ github.workspace }}/docs
          cp ${{ github.workspace }}/target/*.html ${{ github.workspace }}/docs
          cp ${{ github.workspace }}/target/*.gpickle ${{ github.workspace }}/docs

      - run: |
          if [[ -f "./fact.csv" ]]; then
              rclone copy ./fact.csv sm2drive:Vzduchotechnika/Model/
          fi
          if [[ -f "./fact_indoor_temperature.csv" ]]; then
              rclone copy ./fact_indoor_temperature.csv sm2drive:Indoor/Model/
          fi
          if [[ -f "./fact_indoor_humidity.csv" ]]; then
              rclone copy ./fact_indoor_humidity.csv sm2drive:Indoor/Model/
          fi

      - run: ls -l ${{ github.workspace }}/docs

      - run: git status

      - name: Commit files
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add --all :/
          git commit -m "Add docs"
        continue-on-error: true

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
        continue-on-error: true

      - run: |
          if [ -d "./latest" ]; then
            rclone copyto sm2drive:Vzduchotechnika/Latest/Upload sm2drive:Vzduchotechnika/Archiv/${{ env.extdate }}/
            rclone purge sm2drive:Vzduchotechnika/Latest/Upload && rclone mkdir sm2drive:Vzduchotechnika/Latest/Upload
          fi